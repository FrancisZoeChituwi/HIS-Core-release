{"version":3,"sources":["webpack:///./src/apps/OPD/views/encounters/OutcomeStatus.vue?73b7","webpack:///./src/apps/OPD/services/patient_referral_service.ts","webpack:///./src/apps/OPD/services/patient_admit_service.ts","webpack:///./src/apps/OPD/views/encounters/OutcomeStatus.vue","webpack:///./src/apps/OPD/views/encounters/OutcomeStatus.vue?29d8"],"names":["render","_ctx","_cache","$props","$setup","$data","$options","_component_his_standard_form","cancelDestinationPath","cancelDestination","fields","onFinishAction","onSubmit","patientID","providerID","components","HisStandardForm","mixins","EncounterMixin","data","referralService","admissionService","watch","ready","handler","isReady","getFields","immediate","deep","methods","formData","computedData","opd_outcome","value","createEncounter","resolveObs","admissionData","saveObservationList","referralData","nextTask","id","helpText","type","TT_SELECT","validation","required","options","label","computedValue","tag","obs","buildValueText","condition","_","filter","config","showKeyboard","isFilterDataViaApi","other","buildValueCodedFromConceptId","concept_id","__exports__"],"mappings":"yIAEM,SAAUA,EAAOC,EAAMC,EAAQC,EAAQC,EAAQC,EAAOC,GAC1D,IAAMC,EAA+B,8BAAkB,qBAEvD,OAAQ,yBAAc,yBAAaA,EAA8B,CAC/DC,sBAAuBP,EAAKQ,kBAC5BC,OAAQT,EAAKS,OACbC,eAAgBV,EAAKW,UACpB,KAAM,EAAG,CAAC,wBAAyB,SAAU,mB,oJCPrC,EAAb,wDACI,WAAYC,EAAmBC,GAAkB,0CACvCD,EAAW,IAAKC,GAF9B,UAA4C,QCA/B,EAAb,wDACI,WAAYD,EAAmBC,GAAkB,0CACvCD,EAAW,GAAIC,GAF7B,UAAyC,QCS1B,+BAAgB,CAC7BC,WAAY,CAAEC,gBAAA,QACdC,OAAQ,CAACC,EAAA,MACTC,KAAM,iBAAO,CACXC,gBAAiB,GACjBC,iBAAkB,KAEpBC,MAAO,CACLC,MAAO,CACCC,QADD,SACSC,GAAgB,wJACzBA,IACD,EAAKL,gBAAkB,IAAI,EAAuB,EAAKP,UAAW,EAAKC,YACvE,EAAKO,iBAAmB,IAAI,EAAoB,EAAKR,UAAW,EAAKC,YACrE,EAAKJ,OAAS,EAAKgB,aAJO,8CAO9BC,WAAW,EACXC,MAAM,IAGVC,QAAS,CACDjB,SADC,SACQkB,EAAeC,GAAiB,mKACX,cAA/BD,EAASE,YAAYC,MADqB,iCAErC,EAAKZ,iBAAiBa,kBAFe,uBAGf,EAAKC,WAAL,kBAAoBJ,GAAe,aAHpB,cAGrCK,EAHqC,gBAIrC,EAAKf,iBAAiBgB,oBAAoBD,GAJL,gDAMrC,EAAKhB,gBAAgBc,kBANgB,yBAOhB,EAAKC,WAAL,kBAAoBJ,GAAe,YAPnB,eAOrCO,EAPqC,iBAQrC,EAAKlB,gBAAgBiB,oBAAoBC,GARJ,QAW7C,EAAKC,WAXwC,+CAa/Cb,UAdO,WAcE,WACP,MAAO,CACL,CACEc,GAAI,cACJC,SAAU,iBACVC,KAAM,OAAUC,UAChBC,WAAY,SAACX,GAAD,OAAgB,OAAWY,SAASZ,IAChDa,QAAS,WACP,MAAO,CACL,CAAEC,MAAO,QAASd,MAAO,aACzB,CAAEc,MAAO,oBAAqBd,MAAO,qBACrC,CAAEc,MAAO,mCAAoCd,MAAO,wBAI1D,CACEO,GAAI,gBACJC,SAAU,uBACVC,KAAM,OAAUC,UAChBC,WAAY,SAACX,GAAD,OAAgB,OAAWY,SAASZ,IAChDe,cAAe,gBAAGf,EAAH,EAAGA,MAAH,MAAwB,CACrCgB,IAAK,WACLC,IAAK,EAAK9B,gBAAgB+B,eAAe,WAAYlB,KAEvDmB,UAAW,SAAC1C,GAAD,MAA8C,sBAA7BA,EAAOsB,YAAYC,OAC/Ca,QAAS,SAACO,GAAD,IAASC,EAAT,uDAAgB,GAAhB,OAAuB,eAAcA,IAC9CC,OAAQ,CACJC,cAAc,EACdC,oBAAoB,IAG1B,CACEjB,GAAI,oBACJC,SAAU,gBACVC,KAAM,OAAUC,UAChBC,WAAY,SAACX,GAAD,OAAgB,OAAWY,SAASZ,IAChDe,cAAe,gBAAGU,EAAH,EAAGA,MAAH,MAAwB,CACrCT,IAAK,WACLC,IAAK,EAAK9B,gBAAgBuC,6BAA6B,oBAAqBD,EAAME,cAEpFR,UAAW,SAAC1C,GAAD,MAA8C,sBAA7BA,EAAOsB,YAAYC,OAC/Ca,QAAS,kBAAM,kBACfS,OAAQ,CAAEC,cAAc,IAE1B,CACEhB,GAAI,QACJC,SAAU,cACVC,KAAM,OAAUC,UAChBS,UAAW,SAAC1C,GAAD,MAA8C,cAA7BA,EAAOsB,YAAYC,OAC/CW,WAAY,SAACX,GAAD,OAAgB,OAAWY,SAASZ,IAChDe,cAAe,gBAAGf,EAAH,EAAGA,MAAH,MAAwB,CACrCgB,IAAK,YACLC,IAAK,EAAK7B,iBAAiB8B,eAAe,gBAAiBlB,KAE7Da,QAAS,SAACO,GAAD,IAASC,EAAT,uDAAgB,GAAhB,OAAuB,eAAiBA,IACjDC,OAAQ,CACJC,cAAc,EACdC,oBAAoB,S,qBCjGlC,MAAMI,EAA2B,IAAgB,EAAQ,CAAC,CAAC,SAAS7D,KAErD","file":"js/chunk-2d0dd6ae.25726452.js","sourcesContent":["import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_his_standard_form = _resolveComponent(\"his-standard-form\")\n\n  return (_openBlock(), _createBlock(_component_his_standard_form, {\n    cancelDestinationPath: _ctx.cancelDestination,\n    fields: _ctx.fields,\n    onFinishAction: _ctx.onSubmit\n  }, null, 8, [\"cancelDestinationPath\", \"fields\", \"onFinishAction\"]))\n}","import { AppEncounterService } from \"@/services/app_encounter_service\"\r\n\r\nexport class PatientReferralService extends AppEncounterService {\r\n    constructor(patientID: number, providerID: number) {\r\n        super(patientID, 114, providerID) \r\n    }\r\n}","import { AppEncounterService } from \"@/services/app_encounter_service\"\r\n\r\nexport class PatientAdmitService extends AppEncounterService {\r\n    constructor(patientID: number, providerID: number) {\r\n        super(patientID, 42, providerID) \r\n    }\r\n}","\r\nimport { defineComponent} from 'vue'\r\nimport HisStandardForm from \"@/components/Forms/TouchScreenForm.vue\";\r\nimport EncounterMixinVue from '@/views/EncounterMixin.vue';\r\nimport Validation from '@/components/Forms/validations/StandardValidations';\r\nimport { Field, Option } from '@/components/Forms/FieldInterface';\r\nimport { FieldType } from '@/components/Forms/BaseFormElements';\r\nimport { getFacilities, getFacilityWards, getSpecialistClinics } from '@/utils/HisFormHelpers/LocationFieldOptions';\r\nimport { PatientReferralService } from '@/apps/OPD/services/patient_referral_service'\r\nimport { PatientAdmitService } from '@/apps/OPD/services/patient_admit_service'\r\n\r\nexport default defineComponent({\r\n  components: { HisStandardForm },\r\n  mixins: [EncounterMixinVue],\r\n  data: () => ({\r\n    referralService: {} as any,\r\n    admissionService: {} as any\r\n  }),\r\n  watch: {\r\n    ready: {\r\n      async handler(isReady: boolean) {\r\n        if(isReady){\r\n          this.referralService = new PatientReferralService(this.patientID, this.providerID)\r\n          this.admissionService = new PatientAdmitService(this.patientID, this.providerID)\r\n          this.fields = this.getFields()\r\n        }\r\n      },\r\n      immediate: true,\r\n      deep: true\r\n    }\r\n  },\r\n  methods: {\r\n    async onSubmit(formData: any, computedData: any){\r\n      if(formData.opd_outcome.value === 'Admission') {\r\n        await this.admissionService.createEncounter()\r\n        const admissionData = await this.resolveObs({...computedData}, 'admission')\r\n        await this.admissionService.saveObservationList(admissionData)\r\n      } else {\r\n        await this.referralService.createEncounter()\r\n        const referralData = await this.resolveObs({...computedData}, 'referral')\r\n        await this.referralService.saveObservationList(referralData)\r\n      }\r\n      \r\n      this.nextTask()        \r\n    },\r\n    getFields(): Array<Field>{\r\n      return [\r\n        {\r\n          id: 'opd_outcome',\r\n          helpText: 'Select outcome',\r\n          type: FieldType.TT_SELECT,\r\n          validation: (value: any) => Validation.required(value),\r\n          options: () => {\r\n            return [\r\n              { label: 'Admit', value: 'Admission' },\r\n              { label: 'Internal referral', value: 'Internal referral' },\r\n              { label: 'Refer to another hospital/clinic', value: 'External referral' },\r\n            ]\r\n          }\r\n        },\r\n        {\r\n          id: 'facility_name',\r\n          helpText: 'Select Facility name',\r\n          type: FieldType.TT_SELECT,\r\n          validation: (value: any) => Validation.required(value),\r\n          computedValue: ({ value }: Option) => ({\r\n            tag: 'referral',\r\n            obs: this.referralService.buildValueText('Referred', value)\r\n          }),\r\n          condition: (fields: any) => fields.opd_outcome.value === 'External referral',\r\n          options: (_: any, filter='') => getFacilities(filter),\r\n          config: {\r\n              showKeyboard: true,\r\n              isFilterDataViaApi: true\r\n          }\r\n        },\r\n        {\r\n          id: 'specialist_clinic',\r\n          helpText: 'Select clinic',\r\n          type: FieldType.TT_SELECT,\r\n          validation: (value: any) => Validation.required(value),\r\n          computedValue: ({ other }: Option) => ({\r\n            tag: 'referral',\r\n            obs: this.referralService.buildValueCodedFromConceptId('Specialist clinic', other.concept_id)\r\n          }),\r\n          condition: (fields: any) => fields.opd_outcome.value === 'Internal referral',\r\n          options: () => getSpecialistClinics(),\r\n          config: { showKeyboard: true }\r\n        },    \r\n        {\r\n          id: 'wards',\r\n          helpText: 'Select ward',\r\n          type: FieldType.TT_SELECT,\r\n          condition: (fields: any) => fields.opd_outcome.value === 'Admission',\r\n          validation: (value: any) => Validation.required(value),\r\n          computedValue: ({ value }: Option) => ({\r\n            tag: 'admission',\r\n            obs: this.admissionService.buildValueText('Admit to ward', value)\r\n          }),\r\n          options: (_: any, filter='') => getFacilityWards(filter),\r\n          config: {\r\n              showKeyboard: true,\r\n              isFilterDataViaApi: true\r\n          }\r\n        },  \r\n      ]\r\n    }\r\n  }\r\n})\r\n","import { render } from \"./OutcomeStatus.vue?vue&type=template&id=11619aa6&ts=true\"\nimport script from \"./OutcomeStatus.vue?vue&type=script&lang=ts\"\nexport * from \"./OutcomeStatus.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"C:\\\\Users\\\\msuleman\\\\projects\\\\HIS-Core\\\\node_modules\\\\@vue\\\\cli-service\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"sourceRoot":""}