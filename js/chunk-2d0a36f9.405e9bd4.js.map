{"version":3,"sources":["webpack:///./src/apps/CxCa/views/encounters/CxCaOutcome.vue?0bf2","webpack:///./src/apps/CxCa/services/CxCaOutcomeService.ts","webpack:///./src/apps/CxCa/views/encounters/CxCaOutcome.vue","webpack:///./src/apps/CxCa/views/encounters/CxCaOutcome.vue?9916"],"names":["render","_ctx","_cache","$props","$setup","$data","$options","_component_his_standard_form","fields","onFinishAction","onFinish","skipSummary","cancelDestinationPath","cancelDestination","patientID","providerID","mixins","EncounterMixin","components","HisStandardForm","data","outcome","watch","patient","handler","getFields","deep","methods","formData","createEncounter","encounter","programID","getProgramID","getProgramWorkflows","workflows","select_referral_outcome","value","flows","forEach","w","states","f","conceptID","program_workflow_state_id","conceptName","concept","concept_names","name","state","getLocationName","date","getSessionDate","createState","saveState","referralObs","cancerObs","select_cancer_treatment","buildValueCoded","rOb","obList","match","cOb","push","saveObservationList","nextTask","id","helpText","type","TT_SELECT","validation","val","required","options","label","__exports__"],"mappings":"yIAEM,SAAUA,EAAOC,EAAMC,EAAQC,EAAQC,EAAQC,EAAOC,GAC1D,IAAMC,EAA+B,8BAAkB,qBAEvD,OAAQ,yBAAc,yBAAaA,EAA8B,CAC/DC,OAAQP,EAAKO,OACbC,eAAgBR,EAAKS,SACrBC,aAAa,EACbC,sBAAuBX,EAAKY,mBAC3B,KAAM,EAAG,CAAC,SAAU,iBAAkB,0B,oMCR9B,EAAb,wDACI,WAAYC,EAAmBC,GAAkB,0CACvCD,EAAW,IAAKC,GAF9B,UAAoC,QCQrB,+BAAgB,CAC7BC,OAAQ,CAACC,EAAA,MACTC,WAAY,CAAEC,kBAAA,MACdC,KAAM,iBAAO,CACXC,QAAS,KAEXC,MAAO,CACLC,QAAS,CACDC,QADC,WACM,wJACX,EAAKH,QAAU,IAAI,EACjB,EAAKP,UACL,EAAKC,YAEP,EAAKP,OAAS,EAAKiB,YALR,8CAObC,MAAM,IAGVC,QAAS,CACDjB,SADC,SACQkB,GAAa,oMACF,EAAKP,QAAQQ,kBADX,UACpBC,EADoB,OAGrBA,EAHuB,CAAF,wCAGH,eAAa,+BAHV,cAIpBC,EAAY,OAAeC,eAJP,SAKiB,OAAeC,oBAAoB,OAAeD,gBALnE,cAKpBE,EALoB,OAMpBb,EAAUO,EAASO,wBAAwBC,MAC3CC,EAAQ,GACdH,EAAUI,SAAQ,SAAAC,GAChBA,EAAEC,OAAOF,SAAQ,SAAAG,GACf,IAAMC,EAAYD,EAAEE,0BACdC,EAAcH,EAAEI,QAAQC,cAAc,GAAGC,KAC/CV,EAAMO,GAAeF,QAGnBM,EAAQ,CACZ,YAAe,OAAeC,kBAC9BD,MAAOX,EAAMhB,GACb6B,KAAM,OAAeC,kBAlBG,UAoBF,OAAeC,YAAY,EAAKtC,UAAWiB,EAAWiB,GApBpD,WAoBpBK,EApBoB,OAqBtBA,EArBwB,CAAF,yCAqBJ,eAAa,2BArBT,eAsBpBC,EAAc1B,EAASO,wBAAwBC,MAC/CmB,EAAY3B,EAAS4B,wBAAwBpB,MAvBzB,UAwBR,EAAKf,QAAQoC,gBAAgB,UAAWH,GAxBhC,WAwBpBI,EAxBoB,OAyBpBC,EAAS,CAACD,IACbH,EAAUK,MAAM,UA1BS,CAAF,iCA2BN,EAAKvC,QAAQoC,gBAAgB,mBAAoBF,GA3B3C,QA2BlBM,EA3BkB,OA4BxBF,EAAOG,KAAKD,GA5BY,yBA+BR,EAAKxC,QAAQ0C,oBAAoBJ,GA/BzB,eAgC1B,eAAa,uCACb,EAAKK,WAjCqB,+CAoC5BvC,UArCO,WAsCL,MAAO,CACL,CACEwC,GAAI,0BACJC,SAAU,mBACVC,KAAM,OAAUC,UAChBC,WAAY,SAACC,GAAD,OAAc,OAAWC,SAASD,IAC9CE,QAAS,WACP,MAAO,CACL,CACEC,MAAO,mBACPrC,MAAO,oBAET,CACEqC,MAAO,qBACPrC,MAAO,sBAET,CACEqC,MAAO,wBACPrC,MAAO,yBAET,CACEqC,MAAO,qBACPrC,MAAO,yBAKf,CACE6B,GAAI,0BACJC,SAAU,0BACVC,KAAM,OAAUC,UAChBC,WAAY,SAACC,GAAD,OAAc,OAAWC,SAASD,IAC9CE,QAAS,WACP,MAAO,CACL,CACEC,MAAO,UACPrC,MAAO,WAET,CACEqC,MAAO,kBACPrC,MAAO,mBAET,CACEqC,MAAO,aACPrC,MAAO,cAET,CACEqC,MAAO,QACPrC,MAAO,iB,qBC7GvB,MAAMsC,EAA2B,IAAgB,EAAQ,CAAC,CAAC,SAAS1E,KAErD","file":"js/chunk-2d0a36f9.405e9bd4.js","sourcesContent":["import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_his_standard_form = _resolveComponent(\"his-standard-form\")\n\n  return (_openBlock(), _createBlock(_component_his_standard_form, {\n    fields: _ctx.fields,\n    onFinishAction: _ctx.onFinish,\n    skipSummary: true,\n    cancelDestinationPath: _ctx.cancelDestination\n  }, null, 8, [\"fields\", \"onFinishAction\", \"cancelDestinationPath\"]))\n}","import { AppEncounterService } from \"@/services/app_encounter_service\"\r\n\r\nexport class OutcomeService extends AppEncounterService {\r\n    constructor(patientID: number, providerID: number) {\r\n        super(patientID, 184, providerID) //TODO: Use encounter type reference name'\r\n    }\r\n}","\r\nimport { defineComponent } from \"vue\";\r\nimport { FieldType } from \"@/components/Forms/BaseFormElements\";\r\nimport HisStandardForm from \"@/components/Forms/HisStandardForm.vue\";\r\nimport Validation from \"@/components/Forms/validations/StandardValidations\";\r\nimport EncounterMixinVue from \"../../../../views/EncounterMixin.vue\";\r\nimport { toastSuccess, toastWarning } from \"@/utils/Alerts\";\r\nimport { ProgramService } from \"@/services/program_service\";\r\nimport {ProgramWorkflow} from \"@/interfaces/program_workflow\"\r\nimport {OutcomeService} from \"@/apps/CxCa/services/CxCaOutcomeService\"\r\nexport default defineComponent({\r\n  mixins: [EncounterMixinVue],\r\n  components: { HisStandardForm },\r\n  data: () => ({\r\n    outcome: {} as any,\r\n  }),\r\n  watch: {\r\n    patient: {\r\n      async handler() {\r\n        this.outcome = new OutcomeService(\r\n          this.patientID,\r\n          this.providerID\r\n        );\r\n        this.fields = this.getFields();\r\n      },\r\n      deep: true,\r\n    },\r\n  },\r\n  methods: {\r\n    async onFinish(formData: any) {\r\n      const encounter = await this.outcome.createEncounter();\r\n\r\n      if (!encounter) return toastWarning(\"Unable to create encounter\");\r\n      const programID = ProgramService.getProgramID();\r\n      const workflows: ProgramWorkflow[] = await ProgramService.getProgramWorkflows(ProgramService.getProgramID());\r\n      const outcome = formData.select_referral_outcome.value;\r\n      const flows = {} as any;\r\n      workflows.forEach(w => {\r\n        w.states.forEach(f => {\r\n          const conceptID = f.program_workflow_state_id;\r\n          const conceptName = f.concept.concept_names[0].name;\r\n          flows[conceptName] = conceptID;\r\n        })\r\n      })\r\n      const state = {\r\n        'location_id': ProgramService.getLocationName(),\r\n        state: flows[outcome],\r\n        date: ProgramService.getSessionDate()\r\n      }\r\n      const saveState = await ProgramService.createState(this.patientID, programID, state);\r\n      if(!saveState) return toastWarning('Unable to update state')\r\n      const referralObs = formData.select_referral_outcome.value;\r\n      const cancerObs = formData.select_cancer_treatment.value;\r\n      const rOb = await this.outcome.buildValueCoded('Outcome', referralObs);\r\n      const obList = [rOb];\r\n      if(cancerObs.match(/cancer/)) {\r\n        const cOb = await this.outcome.buildValueCoded('Cancer treatment', cancerObs);\r\n        obList.push(cOb);\r\n      }\r\n\r\n      const obs = await this.outcome.saveObservationList(obList);\r\n      toastSuccess(\"Observations and encounter created!\");\r\n      this.nextTask();\r\n    },\r\n\r\n    getFields(): any {\r\n      return [\r\n        {\r\n          id: \"select_referral_outcome\",\r\n          helpText: `Referral outcome`,\r\n          type: FieldType.TT_SELECT,\r\n          validation: (val: any) => Validation.required(val),\r\n          options: () => {\r\n            return [\r\n              {\r\n                label: \"Cancer of cervix\",\r\n                value: \"Cancer of cervix\",\r\n              },\r\n              {\r\n                label: \"Continue follow-up\",\r\n                value: \"Continue follow-up\",\r\n              },\r\n              {\r\n                label: \"Discharged uninfected\",\r\n                value: \"Discharged uninfected\",\r\n              },\r\n              {\r\n                label: \"Treatment complete\",\r\n                value: \"Treatment complete\",\r\n              },\r\n            ];\r\n          },\r\n        },\r\n        {\r\n          id: \"select_cancer_treatment\",\r\n          helpText: \"Select cancer treatment\",\r\n          type: FieldType.TT_SELECT,\r\n          validation: (val: any) => Validation.required(val),\r\n          options: () => {\r\n            return [\r\n              {\r\n                label: \"Surgery\",\r\n                value: \"Surgery\",\r\n              },\r\n              {\r\n                label: \"Palliative Care\",\r\n                value: \"Palliative Care\",\r\n              },\r\n              {\r\n                label: \"Discharged\",\r\n                value: \"Discharged\",\r\n              },\r\n              {\r\n                label: \"Other\",\r\n                value: \"Other\",\r\n              },\r\n            ];\r\n          },\r\n        },\r\n      ];\r\n    },\r\n  },\r\n});\r\n","import { render } from \"./CxCaOutcome.vue?vue&type=template&id=3317e905&ts=true\"\nimport script from \"./CxCaOutcome.vue?vue&type=script&lang=ts\"\nexport * from \"./CxCaOutcome.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"C:\\\\Users\\\\msuleman\\\\projects\\\\HIS-Core\\\\node_modules\\\\@vue\\\\cli-service\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"sourceRoot":""}