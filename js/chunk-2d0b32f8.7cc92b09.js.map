{"version":3,"sources":["webpack:///./src/apps/ART/views/preferences/SetClinicDays.vue?5e97","webpack:///./src/apps/ART/views/preferences/SetClinicDays.vue","webpack:///./src/apps/ART/views/preferences/SetClinicDays.vue?6503"],"names":["render","_ctx","_cache","$props","$setup","$data","$options","_component_his_standard_form","fields","length","key","onFinishAction","onFinish","skipSummary","components","HisStandardForm","methods","formData","children","map","data","label","join","adults","set","then","$router","push","catch","getClinicDayOptions","property","get","val","days","day","value","isChecked","search","getFields","id","helpText","type","TT_MULTIPLE_SELECT","validation","required","options","watch","$route","handler","deep","immediate","__exports__"],"mappings":"yIAEM,SAAUA,EAAOC,EAAMC,EAAQC,EAAQC,EAAQC,EAAOC,GAC1D,IAAMC,EAA+B,8BAAkB,qBAEvD,OAAQN,EAAKO,OAAOC,OAAS,GACxB,yBAAc,yBAAaF,EAA8B,CACxDG,IAAK,EACLF,OAAQP,EAAKO,OACbG,eAAgBV,EAAKW,SACrBC,aAAa,GACZ,KAAM,EAAG,CAAC,SAAU,oBACvB,gCAAoB,IAAI,G,0ICHf,+BAAgB,CAC7BC,WAAY,CAAEC,kBAAA,MACdC,QAAS,CACPJ,SADO,SACEK,GAAa,WACdC,EAAWD,EAASC,SAASC,KAAI,SAACC,GACtC,OAAOA,EAAKC,SACXC,OACGC,EAASN,EAASM,OAAOJ,KAAI,SAACC,GAClC,OAAOA,EAAKC,SACXC,OACH,OAAsBE,IAAI,cAAeD,GACtCE,MAAK,kBAAM,OAAsBD,IAAI,oBAAqBN,MAC1DO,MAAK,kBAAM,eAAa,mBACxBA,MAAK,kBAAM,EAAKC,QAAQC,KAAK,QAC7BC,OAAM,kBAAM,eAAa,8BAExBC,oBAdC,SAcmBC,GAAgB,8KACtB,OAAsBC,IAAID,GADJ,cAClCE,EADkC,yBAEjC,EAAKC,KAAKd,KAAI,SAACe,GAAD,MAAU,CAC7Bb,MAAOa,EACPC,MAAOD,EACPE,WAAY,qBAAQJ,IAAQA,EAAIK,OAAOH,IAAQ,OALT,8CAQ1CI,UAtBO,WAsBE,WACP,MAAO,CACL,CACEC,GAAI,SACJC,SAAU,wCACVC,KAAM,OAAUC,mBAChBC,WAAY,SAACX,GAAD,OAAc,OAAWY,SAASZ,IAC9Ca,QAAQ,kBAAK,EAAKhB,oBAAoB,iBAExC,CACEU,GAAI,WACJC,SAAU,uCACVC,KAAM,OAAUC,mBAChBC,WAAY,SAACX,GAAD,OAAc,OAAWY,SAASZ,IAC9Ca,QAAQ,kBAAK,EAAKhB,oBAAoB,0BAK9CT,KA3C6B,WA4C3B,MAAO,CACLZ,OAAQ,GACRsB,SAAU,cACVG,KAAM,CACJ,SACA,SACA,UACA,YACA,WACA,SACA,cAINa,MAAO,CACLC,OAAQ,CACAC,QADA,WACO,wJACX,EAAKxC,OAAS,EAAK8B,YADR,8CAGbW,MAAM,EACNC,WAAW,M,qBCpEjB,MAAMC,EAA2B,IAAgB,EAAQ,CAAC,CAAC,SAASnD,KAErD","file":"js/chunk-2d0b32f8.7cc92b09.js","sourcesContent":["import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode } from \"vue\"\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_his_standard_form = _resolveComponent(\"his-standard-form\")\n\n  return (_ctx.fields.length > 0)\n    ? (_openBlock(), _createBlock(_component_his_standard_form, {\n        key: 0,\n        fields: _ctx.fields,\n        onFinishAction: _ctx.onFinish,\n        skipSummary: true\n      }, null, 8, [\"fields\", \"onFinishAction\"]))\n    : _createCommentVNode(\"\", true)\n}","\r\nimport { defineComponent } from \"vue\";\r\nimport { FieldType } from \"@/components/Forms/BaseFormElements\";\r\nimport HisStandardForm from \"@/components/Forms/HisStandardForm.vue\";\r\nimport { GlobalPropertyService } from \"@/services/global_property_service\";\r\nimport { toastSuccess, toastWarning } from \"@/utils/Alerts\";\r\nimport Validation from \"@/components/Forms/validations/StandardValidations\"\r\nimport { isEmpty } from \"lodash\"\r\n\r\nexport default defineComponent({\r\n  components: { HisStandardForm },\r\n  methods: {\r\n    onFinish(formData: any) {\r\n      const children = formData.children.map((data: { label: any }) => {\r\n        return data.label\r\n      }).join(); \r\n      const adults = formData.adults.map((data: { label: any }) => {\r\n        return data.label\r\n      }).join();\r\n      GlobalPropertyService.set('clinic.days', adults)\r\n        .then(() => GlobalPropertyService.set('peads.clinic.days', children))\r\n        .then(() => toastSuccess('Property Set'))\r\n        .then(() => this.$router.push(\"/\"))\r\n        .catch(() => toastWarning('Could not set property'))\r\n    },\r\n    async getClinicDayOptions(property: string) {\r\n      const val = await GlobalPropertyService.get(property);\r\n      return this.days.map((day) => ({\r\n        label: day,\r\n        value: day,\r\n        isChecked: !isEmpty(val) && val.search(day) >= 0\r\n      }))\r\n    },\r\n    getFields() {\r\n      return [\r\n        {\r\n          id: \"adults\",\r\n          helpText: \"Clinic days (adults: 18 yrs and over)\",\r\n          type: FieldType.TT_MULTIPLE_SELECT,\r\n          validation: (val: any) => Validation.required(val),\r\n          options:()=> this.getClinicDayOptions('clinic.days'),\r\n        },\r\n        {\r\n          id: \"children\",\r\n          helpText: \"Clinic days (children: Under 18 yrs)\",\r\n          type: FieldType.TT_MULTIPLE_SELECT,\r\n          validation: (val: any) => Validation.required(val),\r\n          options:()=> this.getClinicDayOptions('peads.clinic.days'),\r\n        }\r\n      ];\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      fields: [] as any,\r\n      property: \"site_prefix\",\r\n      days: [\r\n        \"Sunday\",\r\n        \"Monday\",\r\n        \"Tuesday\",\r\n        \"Wednesday\",\r\n        \"Thursday\",\r\n        \"Friday\",\r\n        \"Saturday\",\r\n      ]\r\n    };\r\n  },\r\n  watch: {\r\n    $route: {\r\n      async handler() {\r\n        this.fields = this.getFields();\r\n      },\r\n      deep: true,\r\n      immediate: true,\r\n    },\r\n  },\r\n});\r\n","import { render } from \"./SetClinicDays.vue?vue&type=template&id=28959e6f&ts=true\"\nimport script from \"./SetClinicDays.vue?vue&type=script&lang=ts\"\nexport * from \"./SetClinicDays.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"C:\\\\Users\\\\msuleman\\\\projects\\\\HIS-Core\\\\node_modules\\\\@vue\\\\cli-service\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"sourceRoot":""}