{"version":3,"sources":["webpack:///./src/apps/ART/views/preferences/DefaultPreferences.vue?31a4","webpack:///./src/apps/ART/views/preferences/DefaultPreferences.vue","webpack:///./src/apps/ART/views/preferences/DefaultPreferences.vue?6b42"],"names":["render","_ctx","_cache","$props","$setup","$data","$options","_component_his_standard_form","_component_ion_page","default","fields","onFinishAction","onFinish","skipSummary","_","components","HisStandardForm","IonPage","data","preference","created","this","$route","name","getBPThresholdPreferences","getFilingNumberLimitPreferences","getAppointmentLimitPreferences","getHtnAgePreferences","getClinicDaysPreferences","getClinicHolidaysPreferences","getCxCaScreeningPreference","methods","isProp","prop","set","$router","back","screeningProp","CERVICAL_CANCER_SCREENING","id","helpText","type","TT_YES_NO","condition","computedValue","v","defaultValue","cervicalCancerScreeningEnabled","validation","val","required","options","label","values","value","proxyID","CERVICAL_CANCER_AGE_BOUNDS","TT_NUMBER","f","cervicalCancerScreeningAgeBounds","start","starting_screening_age","end","CLINIC_HOLIDAYS","TT_CLINIC_HOLIDAY_PICKER","clinicHolidays","HTN_SYSTOLIC_THRESHOLD","systolicThreshold","HTN_DIASTOLIC_THRESHOLD","diastolicThreshold","FILING_NUMBER_LIMIT","filingNumberLimit","APPOINTMENT_LIMIT","appointmentLimit","HTN_SCREENING_AGE_THRESHOLD","htnAgeThreshold","toStr","map","d","join","days","isChecked","search","ADULT_CLINIC_DAYS","TT_MULTIPLE_SELECT","adultClinicDays","PEADS_CLINIC_DAYS","peadsClinicDays","__exports__"],"mappings":"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","file":"js/chunk-2d0b5f74.64470e1d.js","sourcesContent":["import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_his_standard_form = _resolveComponent(\"his-standard-form\")\n  const _component_ion_page = _resolveComponent(\"ion-page\")\n\n  return (_openBlock(), _createBlock(_component_ion_page, null, {\n    default: _withCtx(() => [\n      _createVNode(_component_his_standard_form, {\n        fields: _ctx.fields,\n        onFinishAction: _ctx.onFinish,\n        skipSummary: true\n      }, null, 8, [\"fields\", \"onFinishAction\"])\n    ]),\n    _: 1\n  }))\n}","\r\nimport { defineComponent } from 'vue'\r\nimport { FieldType } from \"@/components/Forms/BaseFormElements\";\r\nimport ART_PROP from \"@/apps/ART/art_global_props\"\r\nimport {ART_GLOBAL_PROP} from \"@/apps/ART/art_global_props\"\r\nimport HisStandardForm from \"@/components/Forms/HisStandardForm.vue\";\r\nimport Validation from \"@/components/Forms/validations/StandardValidations\"\r\nimport { Field, Option } from '@/components/Forms/FieldInterface';\r\nimport { isEmpty } from \"lodash\"\r\nimport { GlobalPropertyService } from '@/services/global_property_service';\r\nimport { toastSuccess } from '@/utils/Alerts';\r\nimport { IonPage } from \"@ionic/vue\"\r\n\r\nexport default defineComponent({\r\n\tcomponents: { HisStandardForm, IonPage },\r\n\tdata: () => ({\r\n\t\tpreference: '' as string,\r\n\t\tfields: [] as any\r\n\t}),\r\n\tcreated() {\r\n\t\tthis.preference = this.$route.name as string\r\n\t\tthis.fields = [\r\n\t\t\t...this.getBPThresholdPreferences(),\r\n\t\t\t...this.getFilingNumberLimitPreferences(),\r\n\t\t\t...this.getAppointmentLimitPreferences(),\r\n\t\t\t...this.getHtnAgePreferences(),\r\n\t\t\t...this.getClinicDaysPreferences(),\r\n\t\t\t...this.getClinicHolidaysPreferences(),\r\n\t\t\t...this.getCxCaScreeningPreference()\r\n\t\t]\r\n\t},\r\n\tmethods: {\r\n\t\tisProp(prop: string) {\r\n\t\t\treturn !this.preference || prop === this.preference\r\n\t\t},\r\n\t\tasync onFinish(_: any, data: Record<string, any>) {\r\n\t\t\tfor(const prop in data) {\r\n\t\t\t\tawait GlobalPropertyService.set(prop, data[prop])\r\n\t\t\t\ttoastSuccess('Property has been updated', 2000)\r\n\t\t\t}\r\n\t\t\tthis.$router.back()\r\n\t\t},\r\n\t\tgetCxCaScreeningPreference() {\r\n\t\t\tconst prop = 'cervical_cancer'\r\n\t\t\tconst screeningProp = ART_GLOBAL_PROP.CERVICAL_CANCER_SCREENING\r\n\t\t\treturn [\r\n\t\t\t\t{\r\n\t\t\t\t\tid: screeningProp,\r\n\t\t\t\t\thelpText: 'Activate CxCa screening',\r\n\t\t\t\t\ttype: FieldType.TT_YES_NO,\r\n\t\t\t\t\tcondition : () => this.isProp(prop),\r\n\t\t\t\t\tcomputedValue: (v: string) => v,\r\n\t\t\t\t\tdefaultValue: () => ART_PROP.cervicalCancerScreeningEnabled(),\r\n\t\t\t\t\tvalidation: (val: any) => Validation.required(val),\r\n\t\t\t\t\toptions: () =>[\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlabel: 'Activate screening?',\r\n\t\t\t\t\t\t\tvalues: [\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tlabel: \"Yes\",\r\n\t\t\t\t\t\t\t\t\tvalue: \"true\"\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tlabel: \"No\",\r\n\t\t\t\t\t\t\t\t\tvalue: \"false\"\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t]\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tid: 'starting_screening_age',\r\n\t\t\t\t\tproxyID: ART_GLOBAL_PROP.CERVICAL_CANCER_AGE_BOUNDS, \r\n\t\t\t\t\thelpText: 'Starting screening age',\r\n\t\t\t\t\ttype: FieldType.TT_NUMBER,\r\n\t\t\t\t\tcondition : (f: any) => this.isProp(prop) && f[screeningProp] === 'true',\r\n\t\t\t\t\tdefaultValue: async () => {\r\n\t\t\t\t\t\tconst { start } =  await ART_PROP.cervicalCancerScreeningAgeBounds()\r\n\t\t\t\t\t\tif (start) return start\r\n\t\t\t\t\t},\r\n\t\t\t\t\tvalidation: (val: any) => Validation.required(val)\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tid: 'maximum_screening_age',\r\n\t\t\t\t\tproxyID: ART_GLOBAL_PROP.CERVICAL_CANCER_AGE_BOUNDS,\r\n\t\t\t\t\thelpText: 'Maximum screening age',\r\n\t\t\t\t\ttype: FieldType.TT_NUMBER,\r\n\t\t\t\t\tcondition : (f: any) => this.isProp(prop) && f[screeningProp] === 'true',\r\n\t\t\t\t\tcomputedValue: (v: Option, f: any) => `${f.starting_screening_age.value}:${v.value}`,\r\n\t\t\t\t\tdefaultValue: async () => {\r\n\t\t\t\t\t\tconst {end} =  await ART_PROP.cervicalCancerScreeningAgeBounds()\r\n\t\t\t\t\t\tif (end) return end\r\n\t\t\t\t\t},\r\n\t\t\t\t\tvalidation: (val: any) => Validation.required(val)\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t},\r\n\t\tgetClinicHolidaysPreferences() {\r\n\t\t\tconst prop = ART_GLOBAL_PROP.CLINIC_HOLIDAYS\r\n\t\t\treturn [\r\n\t\t\t\t{\r\n\t\t\t\t\tid: prop,\r\n\t\t\t\t\thelpText: \"Set clinic holiday(s)\",\r\n\t\t\t\t\ttype: FieldType.TT_CLINIC_HOLIDAY_PICKER,\r\n\t\t\t\t\tcondition: () => this.isProp(prop),\r\n\t\t\t\t\tcomputedValue: (v: Option) => v.value,\r\n\t\t\t\t\tdefaultValue: () => ART_PROP.clinicHolidays(),\r\n\t\t\t\t\tvalidation: (val: string) => Validation.required(val)\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t},\r\n\t\tgetBPThresholdPreferences() {\r\n\t\t\tconst prop = 'bp_thresholds'\r\n\t\t\treturn [\r\n\t\t\t\t{\r\n\t\t\t\t\tid: ART_GLOBAL_PROP.HTN_SYSTOLIC_THRESHOLD,\r\n\t\t\t\t\thelpText: 'Set systolic blood pressure',\r\n\t\t\t\t\ttype: FieldType.TT_NUMBER,\r\n\t\t\t\t\tcondition : () => this.isProp(prop),\r\n\t\t\t\t\tcomputedValue: (v: Option) => v.value,\r\n\t\t\t\t\tdefaultValue: () => ART_PROP.systolicThreshold(),\r\n\t\t\t\t\tvalidation: (val: any) => Validation.required(val) \r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tid: ART_GLOBAL_PROP.HTN_DIASTOLIC_THRESHOLD,\r\n\t\t\t\t\thelpText: 'Set diastolic blood pressure',\r\n\t\t\t\t\ttype: FieldType.TT_NUMBER,\r\n\t\t\t\t\tcondition : () => this.isProp(prop),\r\n\t\t\t\t\tcomputedValue: (v: Option) => v.value,\r\n\t\t\t\t\tdefaultValue: () => ART_PROP.diastolicThreshold(),\r\n\t\t\t\t\tvalidation: (val: any) => Validation.required(val)\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t},\r\n\t\tgetFilingNumberLimitPreferences() {\r\n\t\t\tconst prop = ART_GLOBAL_PROP.FILING_NUMBER_LIMIT\r\n\t\t\treturn [\r\n\t\t\t\t{\r\n\t\t\t\t\tid: prop,\r\n\t\t\t\t\thelpText: \"Enter Filing Number Limit\",\r\n\t\t\t\t\tcondition : () => this.isProp(prop),\r\n\t\t\t\t\tcomputedValue: (v: Option) => v.value, \r\n\t\t\t\t\tdefaultValue: () => ART_PROP.filingNumberLimit(),\r\n\t\t\t\t\ttype: FieldType.TT_NUMBER,\r\n\t\t\t\t\tvalidation: (val: any) => Validation.required(val)\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t},\r\n\t\tgetAppointmentLimitPreferences() {\r\n\t\t\tconst prop = ART_GLOBAL_PROP.APPOINTMENT_LIMIT\r\n\t\t\treturn [\r\n\t\t\t\t{\r\n\t\t\t\t\tid: prop,\r\n\t\t\t\t\thelpText: \"Enter Appointment Limit\",\r\n\t\t\t\t\ttype: FieldType.TT_NUMBER,\r\n\t\t\t\t\tcomputedValue: (v: Option) => v.value, \r\n\t\t\t\t\tcondition : () => this.isProp(prop),\r\n\t\t\t\t\tdefaultValue: () => ART_PROP.appointmentLimit(),\r\n\t\t\t\t\tvalidation: (val: any) => Validation.required(val),\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t},\r\n\t\tgetHtnAgePreferences() {\r\n\t\t\tconst prop = ART_GLOBAL_PROP.HTN_SCREENING_AGE_THRESHOLD\r\n\t\t\treturn [\r\n\t\t\t\t{\r\n\t\t\t\t\tid: prop,\r\n\t\t\t\t\ttype: FieldType.TT_NUMBER,\r\n\t\t\t\t\thelpText: \"Enter HTN age Threshold\",\r\n\t\t\t\t\tcondition : () => this.isProp(prop),\r\n\t\t\t\t\tcomputedValue: (v: Option) => v.value,\r\n\t\t\t\t\tdefaultValue: () => ART_PROP.htnAgeThreshold(),\r\n\t\t\t\t\tvalidation: (val: any) => Validation.required(val)\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t},\r\n\t\tgetClinicDaysPreferences() {\r\n\t\t\tconst prop = 'clinic_days'\r\n\t\t\tconst toStr = (v: Option[]) => v.map(d => d.value).join()\r\n\t\t\tconst options = (values: string) => {\r\n\t\t\t\tconst days = [\r\n\t\t\t\t\t\"Sunday\",\r\n\t\t\t\t\t\"Monday\",\r\n\t\t\t\t\t\"Tuesday\",\r\n\t\t\t\t\t\"Wednesday\",\r\n\t\t\t\t\t\"Thursday\",\r\n\t\t\t\t\t\"Friday\",\r\n\t\t\t\t\t\"Saturday\"\r\n\t\t\t\t]\r\n\t\t\t\treturn days.map(d => ({\r\n\t\t\t\t\tlabel: d, \r\n\t\t\t\t\tvalue: d,\r\n\t\t\t\t\tisChecked: !isEmpty(values) && values.search(d) >= 0\r\n\t\t\t\t}))\r\n\t\t\t}\r\n\t\t\treturn [\r\n\t\t\t\t{\r\n\t\t\t\t\tid: ART_GLOBAL_PROP.ADULT_CLINIC_DAYS,\r\n\t\t\t\t\thelpText: \"Clinic days (adults: 18 yrs and over)\",\r\n\t\t\t\t\ttype: FieldType.TT_MULTIPLE_SELECT,\r\n\t\t\t\t\tcondition : () => this.isProp(prop),\r\n\t\t\t\t\tcomputedValue: (v: Option[]) => toStr(v), \r\n\t\t\t\t\tvalidation: (val: any) => Validation.required(val),\r\n\t\t\t\t\toptions: async () => options((await ART_PROP.adultClinicDays())),\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tid: ART_GLOBAL_PROP.PEADS_CLINIC_DAYS,\r\n\t\t\t\t\thelpText: \"Clinic days (children: Under 18 yrs)\",\r\n\t\t\t\t\ttype: FieldType.TT_MULTIPLE_SELECT,\r\n\t\t\t\t\tcondition : () => this.isProp(prop),\r\n\t\t\t\t\tcomputedValue: (v: Option[]) => toStr(v),\r\n\t\t\t\t\tvalidation: (val: any) => Validation.required(val),\r\n\t\t\t\t\toptions: async () => options((await ART_PROP.peadsClinicDays()))\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t}\r\n\t}\r\n})\r\n","import { render } from \"./DefaultPreferences.vue?vue&type=template&id=6629d2cc&ts=true\"\nimport script from \"./DefaultPreferences.vue?vue&type=script&lang=ts\"\nexport * from \"./DefaultPreferences.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"C:\\\\Users\\\\msuleman\\\\projects\\\\HIS-Core\\\\node_modules\\\\@vue\\\\cli-service\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"sourceRoot":""}