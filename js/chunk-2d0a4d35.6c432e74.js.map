{"version":3,"sources":["webpack:///./src/views/SiteLocation.vue?7737","webpack:///./src/views/SiteLocation.vue","webpack:///./src/views/SiteLocation.vue?c53a"],"names":["render","_ctx","_cache","$props","$setup","$data","$options","_component_his_standard_form","fields","onOnSubmit","onSubmit","onOnFinish","onFinish","skipSummary","components","HisStandardForm","methods","formData","siteLocation","location","value","setHealthCenterID","then","$router","push","getFields","this","id","helpText","type","TT_SELECT","config","showKeyboard","isFilterDataViaApi","validation","val","required","options","_","filter","getFacilities","Promise","name","facilities","map","facility","label","location_id","other","data","watch","$route","handler","healthCenterID","deep","immediate","__exports__"],"mappings":"yIAEM,SAAUA,EAAOC,EAAMC,EAAQC,EAAQC,EAAQC,EAAOC,GAC1D,IAAMC,EAA+B,8BAAkB,qBAEvD,OAAQ,yBAAc,yBAAaA,EAA8B,CAC/DC,OAAQP,EAAKO,OACbC,WAAYR,EAAKS,SACjBC,WAAYV,EAAKW,SACjBC,aAAa,GACZ,KAAM,EAAG,CAAC,SAAU,aAAc,e,sHCAxB,+BAAgB,CAC7BC,WAAY,CAAEC,gBAAe,QAC7BC,QAAS,CACPJ,SAAA,SAASK,GAAT,WACQC,EAAeD,EAASE,SAASC,MACvC,OAAYC,kBAAkBH,GAC3BI,MAAK,WAAM,yCACXA,MAAK,WAAM,SAAKC,QAAQC,KAAb,SAEVC,UAAN,W,+GACEC,KAAKlB,OAAS,CACZ,CACEmB,GAAI,WACJC,SAAU,8BACVC,KAAM,OAAUC,UAChBC,OAAQ,CACNC,cAAc,EACdC,oBAAoB,GAEtBC,WAAY,SAACC,GAAa,cAAWC,SAAX,IAC1BC,QAAS,SAACC,EAAQC,GAAgB,YAAhB,IAAAA,MAAA,IAAgB,EAAKC,cAAcD,M,WAIrDC,cAAN,SAAoBD,G,YAAA,IAAAA,MAAA,I,2BAAcE,SAAO,W,qEACpB,SAAM,OAAgBD,cAAc,CAAEE,KAAMH,K,OAC/D,OADMI,EAAa,SACnB,GAAOA,EAAWC,KAAI,SAACC,GAAkB,MAAC,CACxCC,MAAOD,EAASH,KAChBtB,MAAOyB,EAASE,YAChBC,MAAO,CACLrB,GAAIkB,EAASE,2BAKrBE,KAAA,WACE,MAAO,CACLd,IAAK,GACL3B,OAAQ,KAGZ0C,MAAO,CACLC,OAAQ,CACAC,QAAO,W,0HACA,OAAX,EAAA1B,KAAW,GAAM,OAAY2B,kB,cAA7B,EAAKlB,IAAM,SACXT,KAAKD,Y,YAEP6B,MAAM,EACNC,WAAW,M,qBCrDjB,MAAMC,EAA2B,IAAgB,EAAQ,CAAC,CAAC,SAASxD,KAErD","file":"js/chunk-2d0a4d35.6c432e74.js","sourcesContent":["import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_his_standard_form = _resolveComponent(\"his-standard-form\")\n\n  return (_openBlock(), _createBlock(_component_his_standard_form, {\n    fields: _ctx.fields,\n    onOnSubmit: _ctx.onSubmit,\n    onOnFinish: _ctx.onFinish,\n    skipSummary: true\n  }, null, 8, [\"fields\", \"onOnSubmit\", \"onOnFinish\"]))\n}","\nimport { defineComponent } from \"vue\";\nimport { FieldType } from \"@/components/Forms/BaseFormElements\";\nimport HisStandardForm from \"@/components/Forms/HisStandardForm.vue\";\nimport { toastSuccess } from \"@/utils/Alerts\";\nimport { LocationService } from \"@/services/location_service\";\nimport { Option } from \"@/components/Forms/FieldInterface\";\nimport Validation from \"@/components/Forms/validations/StandardValidations\";\nimport GLOBAL_PROP from \"@/apps/GLOBAL_APP/global_prop\";\n\nexport default defineComponent({\n  components: { HisStandardForm },\n  methods: {\n    onFinish(formData: any) {\n      const siteLocation = formData.location.value;\n      GLOBAL_PROP.setHealthCenterID(siteLocation)\n        .then(() => toastSuccess(\"Property set\"))\n        .then(() => this.$router.push(\"/\"));\n    },\n    async getFields() {\n      this.fields = [\n        {\n          id: \"location\",\n          helpText: \"Please select facility name\",\n          type: FieldType.TT_SELECT,\n          config: {\n            showKeyboard: true,\n            isFilterDataViaApi: true,\n          },\n          validation: (val: any) => Validation.required(val),\n          options: (_: any, filter = \"\") => this.getFacilities(filter),\n        },\n      ];\n    },\n    async getFacilities(filter = \"\"): Promise<Option[]> {\n      const facilities = await LocationService.getFacilities({ name: filter });\n      return facilities.map((facility: any) => ({\n        label: facility.name,\n        value: facility.location_id,\n        other: {\n          id: facility.location_id,\n        },\n      }));\n    },\n  },\n  data() {\n    return {\n      val: '',\n      fields: [] as any\n    };\n  },\n  watch: {\n    $route: {\n      async handler() {\n        this.val = await GLOBAL_PROP.healthCenterID();\n        this.getFields();\n      },\n      deep: true,\n      immediate: true,\n    },\n  },\n});\n","import { render } from \"./SiteLocation.vue?vue&type=template&id=1f009844&ts=true\"\nimport script from \"./SiteLocation.vue?vue&type=script&lang=ts\"\nexport * from \"./SiteLocation.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/andrew-dev/Projects/HIS-Core/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"sourceRoot":""}