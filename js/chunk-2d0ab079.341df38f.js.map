{"version":3,"sources":["webpack:///./src/apps/CxCa/views/encounters/CxCaResult.vue?29dd","webpack:///./src/apps/CxCa/views/encounters/CxCaResult.vue","webpack:///./src/apps/CxCa/views/encounters/CxCaResult.vue?4118"],"names":["render","_ctx","_cache","$props","$setup","$data","$options","_component_his_standard_form","fields","onFinishAction","onFinish","skipSummary","cancelDestinationPath","cancelDestination","mixins","EncounterMixin","components","HisStandardForm","data","patientType","watch","patient","handler","patientID","providerID","loadPatientType","getFields","deep","methods","formData","getFacilities","filter","id","helpText","type","TT_SELECT","validation","val","required","options","mapOptions","__exports__"],"mappings":"uIAEM,SAAUA,EAAOC,EAAMC,EAAQC,EAAQC,EAAQC,EAAOC,GAC1D,IAAMC,EAA+B,8BAAkB,qBAEvD,OAAQ,yBAAc,yBAAaA,EAA8B,CAC/DC,OAAQP,EAAKO,OACbC,eAAgBR,EAAKS,SACrBC,aAAa,EACbC,sBAAuBX,EAAKY,mBAC3B,KAAM,EAAG,CAAC,SAAU,iBAAkB,0B,kGCD5B,+BAAgB,CAC7BC,OAAQ,CAACC,EAAA,MACTC,WAAY,CAAEC,kBAAA,MACdC,KAAM,iBAAO,CACXC,YAAa,KAEfC,MAAO,CACLC,QAAS,CACDC,QADC,WACM,+JACX,EAAKH,YAAc,IAAI,OACrB,EAAKI,UACL,EAAKC,YAHI,SAKL,EAAKL,YAAYM,kBALZ,OAMX,EAAKjB,OAAS,EAAKkB,YANR,8CAQbC,MAAM,IAGVC,QAAS,CACDlB,SADC,SACQmB,GAAa,oLAS5BC,cAVO,WAUkB,IAAXC,EAAW,uDAAF,GACrB,OAAO,eAAcA,IAEvBL,UAbO,WAaE,WACP,MAAO,CACL,CACEM,GAAI,mBACJC,SAAU,mBACVC,KAAM,OAAUC,UAChBC,WAAY,SAACC,GAAD,OAAc,OAAWC,SAASD,IAC9CE,QAAS,WACP,OAAO,EAAKC,WAAW,CACrB,WACA,WACA,cAIN,CACER,GAAI,YACJC,SAAU,oBACVC,KAAM,OAAUC,UAChBC,WAAY,SAACC,GAAD,OAAc,OAAWC,SAASD,IAC9CE,QAAS,WACP,OAAO,EAAKC,WAAW,CACrB,mBACA,yBAIN,CACER,GAAI,UACJC,SAAU,uBACVC,KAAM,OAAUC,UAChBC,WAAY,SAACC,GAAD,OAAc,OAAWC,SAASD,IAC9CE,QAAS,WACP,OAAO,EAAKC,WAAW,CACrB,eACA,mBAIN,CACER,GAAI,gBACJC,SAAU,wBACVC,KAAM,OAAUC,UAChBC,WAAY,SAACC,GAAD,OAAc,OAAWC,SAASD,IAC9CE,QAAS,WACP,OAAO,EAAKC,WAAW,CACrB,iBACA,oBACA,0C,qBCpFd,MAAMC,EAA2B,IAAgB,EAAQ,CAAC,CAAC,SAASzC,KAErD","file":"js/chunk-2d0ab079.341df38f.js","sourcesContent":["import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_his_standard_form = _resolveComponent(\"his-standard-form\")\n\n  return (_openBlock(), _createBlock(_component_his_standard_form, {\n    fields: _ctx.fields,\n    onFinishAction: _ctx.onFinish,\n    skipSummary: true,\n    cancelDestinationPath: _ctx.cancelDestination\n  }, null, 8, [\"fields\", \"onFinishAction\", \"cancelDestinationPath\"]))\n}","\r\nimport { defineComponent } from \"vue\";\r\nimport { FieldType } from \"@/components/Forms/BaseFormElements\";\r\nimport HisStandardForm from \"@/components/Forms/HisStandardForm.vue\";\r\nimport Validation from \"@/components/Forms/validations/StandardValidations\";\r\nimport EncounterMixinVue from \"../../../../views/EncounterMixin.vue\";\r\nimport { PatientTypeService } from \"@/apps/ART/services/patient_type_service\";\r\nimport { getFacilities } from \"@/utils/HisFormHelpers/LocationFieldOptions\";\r\n\r\nexport default defineComponent({\r\n  mixins: [EncounterMixinVue],\r\n  components: { HisStandardForm },\r\n  data: () => ({\r\n    patientType: {} as any,\r\n  }),\r\n  watch: {\r\n    patient: {\r\n      async handler() {\r\n        this.patientType = new PatientTypeService(\r\n          this.patientID,\r\n          this.providerID\r\n        );\r\n        await this.patientType.loadPatientType();\r\n        this.fields = this.getFields();\r\n      },\r\n      deep: true,\r\n    },\r\n  },\r\n  methods: {\r\n    async onFinish(formData: any) {\r\n      //       const encounter = await this.patientType.createEncounter();\r\n      //       if (!encounter) return toastWarning(\"Unable to create encounter\");\r\n      //       this.patientType.setLocationName(formData?.location?.label);\r\n      //       this.patientType.setPatientType(formData?.patient_type?.value);\r\n      //       await this.patientType.save();\r\n      //       toastSuccess(\"Observations and encounter created!\");\r\n      //       this.nextTask();\r\n    },\r\n    getFacilities(filter = \"\") {\r\n      return getFacilities(filter);\r\n    },\r\n    getFields(): any {\r\n      return [\r\n        {\r\n          id: \"via_test_results\",\r\n          helpText: \"VIA test results\",\r\n          type: FieldType.TT_SELECT,\r\n          validation: (val: any) => Validation.required(val),\r\n          options: () => {\r\n            return this.mapOptions([\r\n              \"Negative\",\r\n              \"Positive\",\r\n              \"Suspect\",\r\n            ]);\r\n          },\r\n        },\r\n        {\r\n          id: \"pap_smear\",\r\n          helpText: \"PAP Smear Results\",\r\n          type: FieldType.TT_SELECT,\r\n          validation: (val: any) => Validation.required(val),\r\n          options: () => {\r\n            return this.mapOptions([\r\n              \"PAP Smear normal\",\r\n              \"PAP Smear abnormal\"\r\n            ]);\r\n          },\r\n        },\r\n        {\r\n          id: \"hpv_dna\",\r\n          helpText: \"HPV DNA Test Results\",\r\n          type: FieldType.TT_SELECT,\r\n          validation: (val: any) => Validation.required(val),\r\n          options: () => {\r\n            return this.mapOptions([\r\n              \"HPV negative\",\r\n              \"HPV positive\"\r\n            ]);\r\n          },\r\n        },\r\n        {\r\n          id: \"speculum_exam\",\r\n          helpText: \"Speculum Exam Results\",\r\n          type: FieldType.TT_SELECT,\r\n          validation: (val: any) => Validation.required(val),\r\n          options: () => {\r\n            return this.mapOptions([\r\n              \"Visible Lesion\",\r\n              \"No Visible lesion\",\r\n              \"Other gynaecological condition\",\r\n            ]);\r\n          },\r\n        },\r\n      ];\r\n    },\r\n  },\r\n});\r\n","import { render } from \"./CxCaResult.vue?vue&type=template&id=59ae6bcf&ts=true\"\nimport script from \"./CxCaResult.vue?vue&type=script&lang=ts\"\nexport * from \"./CxCaResult.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"C:\\\\Users\\\\msuleman\\\\projects\\\\HIS-Core\\\\node_modules\\\\@vue\\\\cli-service\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"sourceRoot":""}