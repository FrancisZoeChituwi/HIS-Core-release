{"version":3,"sources":["webpack:///./src/apps/OPD/views/encounters/Dispensing.vue?067c","webpack:///./src/apps/OPD/services/dispensation_service.ts","webpack:///./src/apps/OPD/views/encounters/Dispensing.vue","webpack:///./src/apps/OPD/views/encounters/Dispensing.vue?7377"],"names":["render","_ctx","_cache","$props","$setup","$data","$options","_component_his_standard_form","skipSummary","cancelDestinationPath","cancelDestination","fields","patientID","providerID","drugHistory","currentDrugOrder","getDrugHistory","this","getCurrentOrder","buildDispensations","orderId","quantity","date","saveDispensations","dispensations","postJson","getProgramID","voidOrder","void","loadDrugHistory","getDrugOrderHistory","res","loadCurrentDrugOrder","getDrugOrders","Promise","all","calcCompletePack","drug","units","drugOrderBarcodes","barcodes","sort","a","b","tabs","length","i","parseInt","smallestAvailableTab","completePack","mixins","EncounterMixin","data","dispensation","watch","patient","handler","getID","getFields","deep","methods","item","other","order_id","value","buildMedicationHistory","dateA","Date","order","start_date","dateB","map","d","medication","name","toStandardHisDisplayFormat","amount","buildOrderOptions","label","drug_id","calculateCompletePack","getPackSizesRows","drugId","availableStock","packs","getDrugPackSizes","packSize","parseFloat","amount_needed","isDoneDispensing","orders","o","every","Boolean","isValidDispensation","option","isOk","totalTabs","toString","amountNeeded","percentageGiven","id","helpText","type","TT_DRUG_DISPENSER","onValueUpdate","l","gotoPatientDashboard","onValue","isBarcodeScanned","voided","dispensed","config","medicationHistory","toolbarInfo","getFullName","getGender","getBirthdate","hiddenFooterBtns","options","__exports__"],"mappings":"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","file":"js/chunk-2d0ccf55.b0607599.js","sourcesContent":["import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_his_standard_form = _resolveComponent(\"his-standard-form\")\n\n  return (_openBlock(), _createBlock(_component_his_standard_form, {\n    skipSummary: true,\n    cancelDestinationPath: _ctx.cancelDestination,\n    fields: _ctx.fields\n  }, null, 8, [\"cancelDestinationPath\", \"fields\"]))\n}","import { AppEncounterService } from \"@/services/app_encounter_service\";\nimport { DrugOrderService } from \"@/services/drug_order_service\";\n\nexport class DispensationService extends AppEncounterService {\n  drugHistory: Array<any>;\n  currentDrugOrder: Array<any>;\n\n  constructor(patientID: number, providerID: number) {\n    super(patientID, 54, providerID)\n    this.drugHistory = []\n    this.currentDrugOrder = []\n  }\n\n  getDrugHistory() {\n    return this.drugHistory\n  }\n\n  getCurrentOrder() {\n    return this.currentDrugOrder\n  }\n\n  buildDispensations(orderId: number, quantity: number) {\n    return [{\n      'drug_order_id': orderId,\n      date: this.date,\n      quantity: quantity\n    }]\n  }\n\n  saveDispensations(dispensations: Array<any>) {\n    return AppEncounterService.postJson('/dispensations', { \n      dispensations, \n      'program_id': AppEncounterService.getProgramID()\n    })\n  }\n\n  async voidOrder(orderId: number) {\n    return AppEncounterService.void(`/dispensations/${orderId}`, {})\n  }\n\n  async loadDrugHistory() {\n    const res = await DrugOrderService.getDrugOrderHistory(this.patientID)\n    if (res) {\n      this.drugHistory = res\n    }\n  }\n\n  async loadCurrentDrugOrder() {\n    const res = await DrugOrderService.getDrugOrders(this.patientID)\n    if (res) {\n      this.currentDrugOrder = await Promise.all(res)        \n    }\n  }\n\n  calcCompletePack(drug: any, units: number) {\n     //sorting in an ascending order by tabs\n    const drugOrderBarcodes = drug.barcodes.sort(function (a: any, b: any) {\n      return a.tabs - b.tabs;\n    });\n    if (drugOrderBarcodes.length == 0 || units == 0.0) {\n      return units;\n    }\n    for (let i = 0; i <= drugOrderBarcodes.length - 1; i++) {\n      if (parseInt(drugOrderBarcodes[i].tabs) >= units) {\n        return drugOrderBarcodes[i].tabs;\n      }\n    }\n    const smallestAvailableTab = parseInt(drugOrderBarcodes[0].tabs)\n    let completePack = parseInt(drugOrderBarcodes[drugOrderBarcodes.length - 1].tabs)\n    while (completePack < units) {\n      completePack += smallestAvailableTab\n    }\n    return completePack\n  }\n}\n","\nimport { defineComponent } from 'vue'\nimport { FieldType } from \"@/components/Forms/BaseFormElements\"\nimport { Field, Option } from \"@/components/Forms/FieldInterface\"\nimport { toastWarning, alertConfirmation } from \"@/utils/Alerts\"\nimport { DispensationService } from \"@/apps/OPD/services/dispensation_service\"\nimport EncounterMixinVue from '@/views/EncounterMixin.vue'\nimport HisDate from \"@/utils/Date\"\n\nexport default defineComponent({\n  mixins: [EncounterMixinVue],\n  data: () => ({\n    dispensation: {} as any\n  }),\n  watch: {\n    patient: {\n      async handler(patient: any){\n        this.dispensation = new DispensationService(patient.getID(), this.providerID)\n        await this.dispensation.loadCurrentDrugOrder()\n        await this.dispensation.loadDrugHistory()\n        this.fields = this.getFields()\n      },\n      deep: true\n    }\n  },\n  methods: {\n    saveDispensations(item: Option) {\n      const dispensations = this.buildDispensations(item)\n      return this.dispensation.saveDispensations(dispensations)    \n    },\n    buildDispensations(item: Option) {\n      return this.dispensation.buildDispensations(\n        item.other.order_id, item.value\n      )\n    },\n    buildMedicationHistory() {\n      return this.dispensation.getDrugHistory()\n      .sort((a: any, b: any) => {\n        const dateA: any = new Date(a.order.start_date)\n        const dateB: any = new Date(b.order.start_date)\n        return dateB - dateA\n      })\n      .map((d: any) => ({\n        medication: d.drug.name,\n        date: HisDate.toStandardHisDisplayFormat(d.order.start_date),\n        amount: d.quantity\n      }))\n    },\n    buildOrderOptions() {\n      return this.dispensation.getCurrentOrder().map((d: any) => ({\n        label: d.drug.name,\n        value: d.quantity || 0,\n        other: {\n          'drug_id': d.drug.drug_id,\n          'order_id': d.order.order_id,\n          'amount_needed': this.calculateCompletePack(d),\n        }\n      }))\n    },\n    getPackSizesRows(drugId: number, availableStock: number) {\n      const packs = this.dispensation.getDrugPackSizes(drugId)\n      return packs.map((packSize: number) => {\n        const packs = availableStock > 0 ? (availableStock / packSize) : '-'\n        return [packSize, packs, 0, 0]\n      })\n    },\n    calculateCompletePack(order: any) {\n      const units = parseFloat(order.amount_needed) - (order.quantity || 0)\n      const completePack = this.dispensation.calcCompletePack(order, units)\n      return completePack < 0 ? 0 : completePack\n    },\n    isDoneDispensing(orders: Array<Option>) {\n      return orders.map(o => o.value != 0).every(Boolean)\n    },\n    async isValidDispensation(option: Option) {\n      let isOk = true\n      const totalTabs = parseInt(option.value.toString())\n      const amountNeeded = option.other['amount_needed']\n      const percentageGiven = (totalTabs / amountNeeded) * 100\n      if (percentageGiven > 110) {\n        isOk = await alertConfirmation('Are you sure you want to dispense over 110% of the prescribed pill count?')\n      }\n      if (percentageGiven < 100) {\n        isOk = await alertConfirmation('Are you sure you want to dispense less than 100% of the prescribe amount?')\n      }\n      return isOk\n    },\n    getFields(): Array<Field> {\n      return [\n        {\n          id: 'dispenses',\n          helpText: 'Dispensation',\n          type: FieldType.TT_DRUG_DISPENSER,\n          onValueUpdate: async(i: Option, l: Option[]) => {\n            if(i.value != -1 && this.isDoneDispensing(l)) {\n              return this.gotoPatientDashboard()\n            }\n            i.other['amount_needed'] = 0\n            await this.dispensation.loadCurrentDrugOrder()\n            return this.buildOrderOptions()\n          },\n          onValue: async (i: Option, isBarcodeScanned: boolean) => {\n            if (i.value  === -1) {\n              const voided = await this.dispensation.voidOrder(i.other.order_id)\n              return voided? true : false\n            }\n            if (!isBarcodeScanned) {\n              const isValidDispensation = await this.isValidDispensation(i)\n              if (!isValidDispensation) return false\n            }\n            const dispensed = await this.saveDispensations(i)\n            if (dispensed) return true\n            toastWarning('Unable to save dispensation')\n            return false\n          },\n          config: {\n            medicationHistory: this.buildMedicationHistory(),\n            toolbarInfo: [\n              { label: 'Name', value: this.patient.getFullName() },\n              { label: 'Gender', value: this.patient.getGender() },\n              { label: 'Date Of Birth', value: HisDate.toStandardHisDisplayFormat(\n                this.patient.getBirthdate()\n              )}\n            ],\n            hiddenFooterBtns: [ \n              'Clear',\n              'Finish'\n            ]\n          },\n          options: () => this.buildOrderOptions()\n        }\n      ]\n    }\n  }\n})\n","import { render } from \"./Dispensing.vue?vue&type=template&id=1e367495&ts=true\"\nimport script from \"./Dispensing.vue?vue&type=script&lang=ts\"\nexport * from \"./Dispensing.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/andrew-dev/Projects/HIS-Core/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"sourceRoot":""}